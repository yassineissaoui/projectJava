# initialize a database using JPA, two external properties
# spring.jpa.generate-ddl (boolean) - switches the feature on and off and is vendor independent.
# spring.jpa.hibernate.ddl-auto (enum) - is a Hibernate feature that controls the behavior in a more fine-grained way

# shortcut to hibernate.hbm2ddl.auto property. Default to "create-drop" when using an embedded database, "none" otherwise.
# possible options:
# 1. 'validate' - validate the schema, makes no changes to the database
# 2. 'update' - update the schema. - DO NOT USE IT IN PRODUCTION
# 3. 'create' - create the schema, destroying previous data
# 4. 'create-drop' - drop the schema at the end of the session

# Disable DDL handling, schema is initialised using Spring JDBC
# spring.jpa.hibernate.ddl-auto=none

# Create and destroy the schema at the end of the session
spring.jpa.hibernate.ddl-auto=create-drop

flyway.enabled=false

# Spring Boot will load schema-h2.sql and data-h2.sql files if present and if spring.datasource.initialize=true (default)
spring.datasource.platform=h2

# Spring Boot auto configures the H2 web console and makes it available on /h2-console
# The JDBC URL is jdbc:h2:mem:testdb
spring.h2.console.enabled=true

